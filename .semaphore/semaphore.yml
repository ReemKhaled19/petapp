version: v1.0
name: Validate and Deploy Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

blocks:
  - name: "Validate with Maven"
    dependencies: []
    task:
      jobs:
        - name: "Run mvn install"
          commands:
            - checkout
            - cache restore
            - |
              wget -O- https://apt.corretto.aws/corretto.key | sudo apt-key add -
              sudo add-apt-repository 'deb https://apt.corretto.aws stable main'
              sudo apt-get update
              sudo apt-get install -y java-21-amazon-corretto-jdk
              export JAVA_HOME=/usr/lib/jvm/java-21-amazon-corretto
              export PATH=$JAVA_HOME/bin:$PATH
              java -version
            - mvn clean install -DskipTests=false -Denforcer.skip=true
            - cache store
            
  - name: "Trigger Drone Deployment"
    dependencies:
      - "Validate with Maven"
    task:
      secrets:
        - name: DRONE_TOKEN
        - name: DRONE_SERVER
      jobs:
        - name: "Trigger and Wait for Drone"
          commands:
            - |
              if [ "$SEMAPHORE_GIT_BRANCH" = "main" ]; then
                echo "Triggering Drone build for ${SEMAPHORE_GIT_REPO_SLUG}..."
                
                RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
                  -H "Authorization: Bearer ${DRONE_TOKEN}" \
                  "${DRONE_SERVER}/api/repos/${SEMAPHORE_GIT_REPO_SLUG}/builds" \
                  -H "Content-Type: application/json" \
                  -d "{\"branch\":\"main\"}")
                
                HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
                BODY=$(echo "$RESPONSE" | head -n-1)
                
                if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 201 ]; then
                  echo "Drone build triggered successfully!"
                  echo "$BODY"
                  
                  BUILD_NUMBER=$(echo "$BODY" | grep -o '"number":[0-9]*' | head -1 | cut -d':' -f2)
                  
                  if [ -z "$BUILD_NUMBER" ]; then
                    echo "Could not extract build number from response"
                    exit 1
                  fi
                  
                  echo "Build number: $BUILD_NUMBER"
                  echo "Build URL: ${DRONE_SERVER}/${SEMAPHORE_GIT_REPO_SLUG}/${BUILD_NUMBER}"
                  
                  echo ""
                  echo "Waiting for Drone build to complete..."
                  echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                  
                  MAX_WAIT=600  
                  ELAPSED=0
                  CHECK_INTERVAL=10  
                  
                  while [ $ELAPSED -lt $MAX_WAIT ]; do
                    sleep $CHECK_INTERVAL
                    ELAPSED=$((ELAPSED + CHECK_INTERVAL))
                    
                    STATUS_RESPONSE=$(curl -s \
                      -H "Authorization: Bearer ${DRONE_TOKEN}" \
                      "${DRONE_SERVER}/api/repos/${SEMAPHORE_GIT_REPO_SLUG}/builds/${BUILD_NUMBER}")
                    
                    BUILD_STATUS=$(echo "$STATUS_RESPONSE" | grep -o '"status":"[^"]*"' | head -1 | cut -d'"' -f4)
                    
                    case "$BUILD_STATUS" in
                      "success")
                        echo ""
                        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                        echo "Drone build completed SUCCESSFULLY!"
                        echo "Total time: ${ELAPSED} seconds"
                        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                        exit 0
                        ;;
                      "failure")
                        echo ""
                        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                        echo "Drone build FAILED!"
                        echo "Time elapsed: ${ELAPSED} seconds"
                        echo "Check logs: ${DRONE_SERVER}/${SEMAPHORE_GIT_REPO_SLUG}/${BUILD_NUMBER}"
                        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                        exit 1
                        ;;
                      "error"|"killed")
                        echo ""
                        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                        echo "Drone build ERROR!"
                        echo "Time elapsed: ${ELAPSED} seconds"
                        echo "Check logs: ${DRONE_SERVER}/${SEMAPHORE_GIT_REPO_SLUG}/${BUILD_NUMBER}"
                        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                        exit 1
                        ;;
                      "pending"|"running")
                        printf "\r⏱️  [%03ds] Status: %-10s | Checking again in %ds..." "$ELAPSED" "$BUILD_STATUS" "$CHECK_INTERVAL"
                        ;;
                      *)
                        printf "\r⏱️  [%03ds] Status: %-10s (unknown) | Checking..." "$ELAPSED" "$BUILD_STATUS"
                        ;;
                    esac
                  done
                  
                  # Timeout
                  echo ""
                  echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                  echo "TIMEOUT: Drone build took longer than ${MAX_WAIT} seconds"
                  echo "Check status manually: ${DRONE_SERVER}/${SEMAPHORE_GIT_REPO_SLUG}/${BUILD_NUMBER}"
                  echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                  exit 1
                  
                else
                  echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                  echo "Failed to trigger Drone build"
                  echo "HTTP Code: $HTTP_CODE"
                  echo "Response: $BODY"
                  echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                  exit 1
                fi
              else
                echo "Skipping Drone trigger - not on main branch (current: $SEMAPHORE_GIT_BRANCH)"
              fi
